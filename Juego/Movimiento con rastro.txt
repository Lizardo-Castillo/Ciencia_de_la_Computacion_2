#include <SFML/Graphics.hpp>
#include <vector>

struct TrailPoint
{
    sf::Vector2f position;
    sf::Color color;
};

int main()
{
    sf::RenderWindow window(sf::VideoMode(800, 600), "SFML Estela");

    sf::RectangleShape square(sf::Vector2f(50, 50));
    square.setFillColor(sf::Color::Red);
    square.setPosition(100, 100);

    std::vector<TrailPoint> trailPoints; // Vector para almacenar los puntos de la estela

    float velocidad = 200.0f; // Velocidad de movimiento en pÃ­xeles por segundo

    sf::Clock clock;
    sf::Clock trailTimer;
    bool showTrail = false;

    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();
            else if (event.type == sf::Event::KeyPressed)
            {
                if (event.key.code == sf::Keyboard::X)
                {
                    showTrail = true;
                    trailTimer.restart();
                }
            }
        }

        sf::Time deltaTime = clock.restart();
        float deltaTimeSeconds = deltaTime.asSeconds();

        sf::Vector2f movement(0.0f, 0.0f);

        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up))
        {
            movement.y -= velocidad;
        }
        else if (sf::Keyboard::isKeyPressed(sf::Keyboard::Down))
        {
            movement.y += velocidad;
        }
        else if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left))
        {
            movement.x -= velocidad;
        }
        else if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right))
        {
            movement.x += velocidad;
        }

        square.move(movement * deltaTimeSeconds);

        if (showTrail)
        {
            if (trailTimer.getElapsedTime().asSeconds() >= 5.0f)
            {
                showTrail = false;
                trailPoints.clear();
            }
            else
            {
                TrailPoint trailPoint;
                trailPoint.position = square.getPosition();
                trailPoint.color = sf::Color::Blue;
                trailPoints.push_back(trailPoint);
            }
        }

        window.clear();
        window.draw(square);

        // Dibujar la estela
        for (const auto& trailPoint : trailPoints)
        {
            sf::RectangleShape trail(sf::Vector2f(50, 50));
            trail.setPosition(trailPoint.position);
            trail.setFillColor(trailPoint.color);
            window.draw(trail);
        }

        window.display();
    }

    return 0;
}
